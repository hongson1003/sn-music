// src/utils/axios.js
import AsyncStorage from "@react-native-async-storage/async-storage";
import axios from "axios";

// T·∫°o m·ªôt instance axios v·ªõi c·∫•u h√¨nh m·∫∑c ƒë·ªãnh
const instance = axios.create({
  baseURL: "http://192.168.55.164:8069/api/v1", // C·∫•u h√¨nh URL c∆° b·∫£n cho API
  timeout: 10000, // Th·ªùi gian timeout t·ªëi ƒëa l√† 10s
  headers: {
    "Content-Type": "application/json",
  },
});

// Interceptors cho request
instance.interceptors.request.use(
  async (config) => {
    // ƒê√°nh d·∫•u interceptor n√†y l√† async
    const token = await AsyncStorage.getItem("userToken");
    console.log("üöÄ ~ token:", token);
    if (token) {
      config.headers["Authorization"] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// Interceptors cho response
instance.interceptors.response.use(
  (response) => response.data,
  (error) => {
    // X·ª≠ l√Ω l·ªói (v√≠ d·ª•: token h·∫øt h·∫°n, API tr·∫£ v·ªÅ l·ªói)
    if (error.response && error.response.status === 401) {
      // Th·ª±c hi·ªán logout ho·∫∑c chuy·ªÉn h∆∞·ªõng ƒë·∫øn m√†n h√¨nh ƒëƒÉng nh·∫≠p
      console.log("Token h·∫øt h·∫°n ho·∫∑c kh√¥ng h·ª£p l·ªá!");
    }
    return Promise.reject(error);
  }
);

export default instance;
